# -*- coding: utf-8 -*-
"""KNN ML Dicoding x IDCamp 2023

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k-aLLGvlpQouamIAIxkcHr2Ib9x9kqvv

# Prediksi Diabetes dengan K-Nearest Neighbors (KNN)

## Pendahuluan
Proyek ini bertujuan untuk memprediksi keberadaan diabetes pada pasien berdasarkan beberapa fitur klinis. Algoritma yang digunakan untuk memprediksi adalah K-Nearest Neighbors (KNN).
Link Datasets : https://www.kaggle.com/datasets/uciml/pima-indians-diabetes-database?resource=download

## 1. Load Data

Import library yang diperlukan, dan data dari file "diabetes.csv" load menggunakan library Pandas, Beberapa baris pertama data ditampilkan untuk memeriksa strukturnya
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score, classification_report
from joblib import dump

file_path = "diabetes.csv"
df = pd.read_csv(file_path)
df.head()

"""Data frame tersebut terdiri dari 768 entri dengan 9 kolom, tanpa nilai null, yang berisi informasi klinis tentang pasien, termasuk keberadaan diabetes sebagai target"""

df.info()

null_counts = df.isnull().sum()
print("Jumlah nilai null dalam setiap kolom:")
print(null_counts)

"""## 2. Pemisahan Fitur dan Target

Fitur dan target dipisahkan dari DataFrame. Fitur itu kolom yang akan digunakan untuk membuat prediksi (X), sementara target itu variabel yang ingin diprediksi (y)
"""

X = df[['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI', 'DiabetesPedigreeFunction', 'Age']]
y = df['Outcome']

"""## 3. Pembagian Data

Data dibagi menjadi data latih dan data uji menggunakan metode train_test_split dari scikit-learn, dibawah ini membagi data menjadi data latih (X_train, y_train) dan data uji (X_test, y_test) dengan proporsi 80:20
"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""## 5. Evaluasi Model

Kode tersebut menginisialisasi model K-Nearest Neighbors (KNN) dengan jumlah tetangga sebanyak 3, dan melatih model tersebut menggunakan data latih (X_train, y_train)
"""

knn = KNeighborsClassifier(n_neighbors=3)
knn.fit(X_train, y_train)

"""Dibawah ini menggunakan model KNN yang telah dilatih untuk membuat prediksi pada data uji (X_test), menghitung akurasinya, dan menampilkan akurasi model KNN yang telah dilatih, Akurasi model KNN yang telah dilatih adalah sekitar 66.23%"""

y_pred = knn.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print("Akurasi model KNN:", accuracy)

"""Kode dibawah ini menyimpan model KNN yang telah dilatih ke dalam file 'knn_model.joblib' untuk digunakan kembali di masa mendatang"""

dump(knn, 'knn_model.joblib')